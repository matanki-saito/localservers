apiVersion: batch/v1
kind: CronJob
metadata:
  namespace: wikis
  name: ck2wiki-backup-batch
spec:
  schedule: "10 */36 * * *"
  concurrencyPolicy: "Forbid"
  startingDeadlineSeconds: 600
  jobTemplate:
    spec:
      template:
        metadata:
          annotations:
            sidecar.istio.io/inject: "false"
        spec:
          containers:
          - name: ck2wiki-backup-docker
            image: istepanov/backup-to-s3
            envFrom:
              - secretRef:
                  name: ck2wiki-backup-env-secret
            volumeMounts:
              - name: ck2wiki-persistent-storage
                mountPath: /data
                readOnly: true
            args:
              - no-cron
          restartPolicy: "OnFailure"
          volumes:
            - name: ck2wiki-persistent-storage
              persistentVolumeClaim:
                claimName: ck2wiki-pv-claim
---
apiVersion: batch/v1
kind: CronJob
metadata:
  namespace: wikis
  name: eu4wiki-backup-batch
spec:
  schedule: "5 */12 * * *"
  concurrencyPolicy: "Forbid"
  startingDeadlineSeconds: 600
  jobTemplate:
    spec:
      template:
        metadata:
          annotations:
            sidecar.istio.io/inject: "false"
        spec:
          containers:
          - name: eu4wiki-backup-docker
            image: istepanov/backup-to-s3
            envFrom:
              - secretRef:
                  name: eu4wiki-backup-env-secret
            volumeMounts:
              - name: eu4wiki-persistent-storage
                mountPath: /data
                readOnly: true
            args:
              - no-cron
          restartPolicy: "OnFailure"
          volumes:
            - name: eu4wiki-persistent-storage
              persistentVolumeClaim:
                claimName: eu4wiki-pv-claim
---
apiVersion: batch/v1
kind: CronJob
metadata:
  namespace: wikis
  name: ck3wiki-backup-batch
spec:
  schedule: "15 */36 * * *"
  concurrencyPolicy: "Forbid"
  startingDeadlineSeconds: 600
  jobTemplate:
    spec:
      template:
        metadata:
          annotations:
            sidecar.istio.io/inject: "false"
        spec:
          containers:
          - name: ck3wiki-backup-docker
            image: istepanov/backup-to-s3
            envFrom:
              - secretRef:
                  name: ck3wiki-backup-env-secret
            volumeMounts:
              - name: ck3wiki-persistent-storage
                mountPath: /data
                readOnly: true
            args:
              - no-cron
          restartPolicy: "OnFailure"
          volumes:
            - name: ck3wiki-persistent-storage
              persistentVolumeClaim:
                claimName: ck3wiki-pv-claim
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  namespace: ente-pubblico-per-il-benessere-sociale
  name: mysql-backup-batch-ds
  labels:
    app: mysql-backup-batch-ds
spec:
  selector:
    matchLabels:
      app: mysql-backup-batch-app
      version: v1
  template:
    metadata:
      namespace: ente-pubblico-per-il-benessere-sociale
      labels:
        app: mysql-backup-batch-app
        version: v1
    spec:
      containers:
      - name: mysql-backup-docker
        image: databack/mysql-backup
        args:
          - dump
        envFrom:
          - secretRef:
              name: mysql-backup-env-secret
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  namespace: wikis
  name: wikidb-backup-batch-ds
  labels:
    app: wikidb-backup-batch-ds
spec:
  selector:
    matchLabels:
      app: wikidb-backup-batch-app
      version: v1
  template:
    metadata:
      namespace: wikis
      labels:
        app: wikidb-backup-batch-app
        version: v1
    spec:
      containers:
      - name: wikidb-backup-docker
        image: databack/mysql-backup
        args:
          - dump
        envFrom:
          - secretRef:
              name: wikidb-backup-env-secret
